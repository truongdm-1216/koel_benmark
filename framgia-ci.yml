.deployable-branches: &deployable-branches
  - master
  - develop

.prepare-ci-env: &prepare-ci-env
  - export RELEASE_CHANNEL=latest TAG=$(echo $PLUGIN_COMMIT_SHA | cut -c 1-7)

  - test $PLUGIN_REPO_BRANCH == develop && export RELEASE_CHANNEL=latest DEPLOYMENT_SERVER=139.162.21.202 RELEASABLE=true || true
  - test $PLUGIN_REPO_BRANCH == master && export RELEASE_CHANNEL=stable DEPLOYMENT_SERVER=139.162.17.246 RELEASABLE=true || true

  - echo "export RELEASE_CHANNEL=$RELEASE_CHANNEL" >> ci-env
  - echo "export RELEASABLE=$RELEASABLE" >> ci-env
  - echo "export TAG=$TAG" >> ci-env
  - echo "export DEPLOYMENT_SERVER=$DEPLOYMENT_SERVER" >> ci-env

# Deploy script template:
.deploy-script: &deploy-script
  image: framgiaciteam/ssh-able:latest
  commands:
    - source ci-env
    - apk add --no-cache make
    - make deploy

#-------------------------------------------------------------
# MAIN CI SCRIPTS
#-------------------------------------------------------------
project_type: php

environments:
  REGISTRY_SERVER: repo.treescale.com
  REGISTRY_PATH: repo.treescale.com/viblo
  DOCKER_CACHE: .docker-cache
  DOCKER_IMAGES_CACHE: .docker-cache/images.tar.gz

build:
  php:
    image: framgiaciteam/laravel-workspace:latest
    services:
      postgres_test:
        image: viblo/postgres:10-alpine
        environment:
          POSTGRES_DB: viblo_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      elasticsearch:
        image: kimnguyen/docker-elastic:5.3.1
    prepare:
      - cp -n .env.example .env && rm -rf .framgia-ci-reports && mkdir -p .framgia-ci-reports
      - composer install --no-interaction
      - php artisan migrate --database=test
      - echo | phpcs --standard=Framgia --report-checkstyle=.framgia-ci-reports/phpcs.xml --encoding=utf-8 app
      - framgia-ci run --logs

test:
  phpcs:
    ignore: false
    command:
      - echo '' | phpcs --standard=Framgia --report-checkstyle=.framgia-ci-reports/phpcs.xml --encoding=utf-8 app/

deploy:
  deployable:
    when:
      branch: *deployable-branches
    <<: *deploy-script

cache:
  docker-cache:
    folder: .docker-cache
  vendor:
    folder: vendor
    file: composer.lock
